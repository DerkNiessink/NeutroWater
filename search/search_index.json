{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"flow/","text":"The initialization consists of the following: Interpolating the total, absorbtion, and scattering cross section data. Interpolating data of the initial energy distribution of the neutrons. Sampling the initial neutron energies from the energy distribution. Setting the initial position of the neutrons. After the initializing, the actual simulation of the diffusing neutrons can start. Each neutron's energy and position is updated consecutively which consists of the following steps: Give the neutron a random direction. Check if the neutron is inside the tank, if false end the loop else continue. Get the total cross section corresponding to the current energy of the neutron and compute the mean free path. Determine the nuclide with which the neutron collides. Determine the type of reaction. If it is absorption, end the loop; if it is elastic scattering, proceed. Sample a direction from the angular distribution and compute the associated energy loss fraction. Update the Neutron's position and energy. Repeat steps 2-8 until the neutron either escaped or is absorbed. Positions and energies of the neutrons are stored. Several properties can be computed and measured from this data post-simulation.","title":"Program Flow"},{"location":"guide/","text":"Quick Install Guide Clone the repository git clone https://github.com/DerkNiessink/Neutrons.git Create a conda virtual environment and activate it conda create -n env python=3.10 conda activate env Install the requirements poetry install Usage","title":"User Guide"},{"location":"guide/#quick-install-guide","text":"Clone the repository git clone https://github.com/DerkNiessink/Neutrons.git Create a conda virtual environment and activate it conda create -n env python=3.10 conda activate env Install the requirements poetry install","title":"Quick Install Guide"},{"location":"guide/#usage","text":"","title":"Usage"},{"location":"install_guide/","text":"","title":"Quick Install Guide"},{"location":"introduction/","text":"","title":"Introduction"},{"location":"references/","text":"Methods Paul K. Romano, Nicholas E. Horelik, Bryan R. Herman, Adam G. Nelson, Benoit Forget, and Kord Smith, \u201cOpenMC: A State-of-the-Art Monte Carlo Code for Research and Development,\u201d Ann. Nucl. Energy, 82, 90\u201397 (2015). Data","title":"References"},{"location":"references/#methods","text":"Paul K. Romano, Nicholas E. Horelik, Bryan R. Herman, Adam G. Nelson, Benoit Forget, and Kord Smith, \u201cOpenMC: A State-of-the-Art Monte Carlo Code for Research and Development,\u201d Ann. Nucl. Energy, 82, 90\u201397 (2015).","title":"Methods"},{"location":"references/#data","text":"","title":"Data"},{"location":"results/","text":"","title":"Results"},{"location":"theory/","text":"1. Neutron Physics 1.1 Cross Sections 1.2 Neutron Interactions 1.3 Distance to Next Collision 1.4 Transforming Coordinates 1.5 Thermal Motion 2 Geometry 3 Monte Carlo Sampling 4 Interpolation","title":"Theory and Methodology"},{"location":"theory/#1-neutron-physics","text":"","title":"1. Neutron Physics"},{"location":"theory/#11-cross-sections","text":"","title":"1.1 Cross Sections"},{"location":"theory/#12-neutron-interactions","text":"","title":"1.2 Neutron Interactions"},{"location":"theory/#13-distance-to-next-collision","text":"","title":"1.3 Distance to Next Collision"},{"location":"theory/#14-transforming-coordinates","text":"","title":"1.4 Transforming Coordinates"},{"location":"theory/#15-thermal-motion","text":"","title":"1.5 Thermal Motion"},{"location":"theory/#2-geometry","text":"","title":"2 Geometry"},{"location":"theory/#3-monte-carlo-sampling","text":"","title":"3 Monte Carlo Sampling"},{"location":"theory/#4-interpolation","text":"","title":"4 Interpolation"}]}